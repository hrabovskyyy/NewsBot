from apscheduler.schedulers.asyncio import AsyncIOScheduler
from telegram import Bot
from config import DAILY_NEWS_HOUR
from services.api_client import get_top_headlines
from keyboards.reactions import get_reaction_keyboard

# –°–ø–∏—Å–æ–∫ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤, —è–∫—ñ –º–∞—é—Ç—å –æ—Ç—Ä–∏–º—É–≤–∞—Ç–∏ —Ä–æ–∑—Å–∏–ª–∫—É
subscribed_users = set()

def schedule_daily_news(app):
    scheduler = AsyncIOScheduler(timezone="Europe/Kyiv")

    @scheduler.scheduled_job("cron", hour=DAILY_NEWS_HOUR)
    async def send_daily_news():
        if not subscribed_users:
            print("üì≠ –ù–µ–º–∞—î –ø—ñ–¥–ø–∏—Å–∞–Ω–∏—Ö –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤.")
            return

        headlines = await get_top_headlines(country="ua", category="general", page_size=3)

        for user_id in subscribed_users:
            for item in headlines:
                text = f"üóû <b>{item['title']}</b>\n\n{item.get('description') or '–ë–µ–∑ –æ–ø–∏—Å—É'}"
                buttons = get_reaction_keyboard(item['url'])

                try:
                    await app.bot.send_message(
                        chat_id=user_id,
                        text=text,
                        parse_mode="HTML",
                        reply_markup=buttons
                    )
                except Exception as e:
                    print(f"‚ùå –ù–µ –≤–¥–∞–ª–æ—Å—è –Ω–∞–¥—ñ—Å–ª–∞—Ç–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—É {user_id}: {e}")

    scheduler.start()
