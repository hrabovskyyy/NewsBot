from telegram import Update, ReplyKeyboardMarkup
from telegram.ext import ContextTypes
from keyboards.categories import get_categories_keyboard
from keyboards.countries import get_countries_keyboard
from keyboards.main import get_back_keyboard
from services.api_client import get_top_headlines
from keyboards.reactions import get_reaction_keyboard

# 1Ô∏è‚É£ –ü–æ–∫–∞–∑ –∫–∞—Ç–µ–≥–æ—Ä—ñ–π
async def handle_category_choice(update: Update, context: ContextTypes.DEFAULT_TYPE):
    chat_id = (
        update.callback_query.message.chat.id
        if update.callback_query
        else update.effective_chat.id
    )
    if update.callback_query:
        await update.callback_query.answer()

    print(f"üì• handle_category_choice –¥–ª—è chat_id={chat_id}")

    await context.bot.send_message(
        chat_id=chat_id,
        text="üìö –û–±–µ—Ä—ñ—Ç—å –∫–∞—Ç–µ–≥–æ—Ä—ñ—é –Ω–æ–≤–∏–Ω:",
        reply_markup=get_categories_keyboard()
    )

# 2Ô∏è‚É£ –û–±—Ä–æ–±–∫–∞ –≤–∏–±–æ—Ä—É –∫–∞—Ç–µ–≥–æ—Ä—ñ—ó ‚Üí –∫—Ä–∞—ó–Ω–∏
async def handle_country_choice(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    await query.answer()
    category = query.data.split("_")[1]
    context.user_data["category"] = category

    print(f"‚úÖ handle_country_choice: –æ–±—Ä–∞–Ω–∞ –∫–∞—Ç–µ–≥–æ—Ä—ñ—è = {category}")

    await context.bot.send_message(
        chat_id=query.message.chat.id,
        text=f"üåç –û–±–µ—Ä—ñ—Ç—å –∫—Ä–∞—ó–Ω—É –¥–ª—è –∫–∞—Ç–µ–≥–æ—Ä—ñ—ó \"{category}\":",
        reply_markup=get_countries_keyboard()
    )

# 3Ô∏è‚É£ –û—Ç—Ä–∏–º–∞–Ω–Ω—è —ñ –Ω–∞–¥—Å–∏–ª–∞–Ω–Ω—è –Ω–æ–≤–∏–Ω
async def handle_news_request(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    await query.answer()
    chat_id = query.message.chat.id

    country = query.data.split("_")[1]
    category = context.user_data.get("category", "general")

    print(f"üåê handle_news_request: –∫—Ä–∞—ó–Ω–∞ = {country}, –∫–∞—Ç–µ–≥–æ—Ä—ñ—è = {category}")

    articles = await get_top_headlines(country=country, category=category, page_size=5)

    # üîç –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞, —â–æ –≤—ñ–¥–ø–æ–≤—ñ–¥—å –º–∞—î —Ñ–æ—Ä–º–∞—Ç —Å–ø–∏—Å–∫—É
    if not articles or not isinstance(articles, list):
        print(f"‚ùå handle_news_request: –æ—Ç—Ä–∏–º–∞–Ω–æ –Ω–µ —Å–ø–∏—Å–æ–∫ –∞–±–æ –ø–æ—Ä–æ–∂–Ω—ñ–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç {articles}")
        await context.bot.send_message(chat_id, "üòï –ù–æ–≤–∏–Ω–∏ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ.")
        return

    print(f"üì∞ handle_news_request: –∑–Ω–∞–π–¥–µ–Ω–æ {len(articles)} –Ω–æ–≤–∏–Ω")

    for article in articles:
        if not isinstance(article, dict):
            print(f"‚ö†Ô∏è –ü—Ä–æ–ø—É—â–µ–Ω–æ: –æ—á—ñ–∫—É–≤–∞–≤—Å—è dict, –∞ –æ—Ç—Ä–∏–º–∞–≤: {type(article)}")
            continue

        title = article.get("title", "‚ùó–ë–µ–∑ –∑–∞–≥–æ–ª–æ–≤–∫–∞")
        description = article.get("description", "–ë–µ–∑ –æ–ø–∏—Å—É")
        url = article.get("url", "")

        print(f"‚û°Ô∏è {title} ({url})")

        text = f"üì∞ <b>{title}</b>\n\n{description}"
        buttons = get_reaction_keyboard(url)

        await context.bot.send_message(
            chat_id=chat_id,
            text=text,
            parse_mode="HTML",
            reply_markup=buttons
        )

    back_button = [["‚¨ÖÔ∏è –ù–∞–∑–∞–¥"]]
    reply_markup = ReplyKeyboardMarkup(back_button, resize_keyboard=True, one_time_keyboard=True)

    await context.bot.send_message(
        chat_id=chat_id,
        text="–ù–∞—Ç–∏—Å–Ω—ñ—Ç—å –∫–Ω–æ–ø–∫—É, —â–æ–± –ø–æ–≤–µ—Ä–Ω—É—Ç–∏—Å—å –Ω–∞–∑–∞–¥.",
        reply_markup=get_back_keyboard()
    )
